name: Deno-on-push-main

on:
  push:
    branches: [main]

jobs:
  test-then-create-docker-image:
    runs-on: "ubuntu-20.04"
    steps:
      - name: Setup repo
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: "1.11.1"

      - name: Verify formatting
        run: deno fmt --check

      - name: Run linter
        run: deno lint 

      - name: Cache dependencies
        run: deno cache ./deps.ts

      - name: Run unit tests and coverage
        env:
          ENV: test
        run: deno test tests/unit/ --coverage=cov_profile --allow-env --allow-read --allow-run --allow-net

      - name: Run integration tests
        env:
          ENV: test
        run: deno test tests/integration --allow-env --allow-read --allow-run --allow-net

      - name: Create coverage report
        run: deno coverage ./cov_profile --lcov > coverage.lcov

      - name: Run codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.lcov

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Git pull to get latest tag
        run: git pull
        
      - name: Set git tag release version
        run: echo "RELEASE_VERSION=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV

      - name: Build docker images using cache
        env:
          IMAGE_NAME: ${{ github.event.repository.name }}
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          password: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          registry: 607128906826.dkr.ecr.ap-southeast-1.amazonaws.com
          image_name: ${{ env.IMAGE_NAME }}
          image_tag: latest,${{ env.RELEASE_VERSION }}
